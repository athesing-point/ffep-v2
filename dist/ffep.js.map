{
  "version": 3,
  "sources": ["../src/ffep.js"],
  "sourcesContent": [
    "// Constants\nconst SMARTY_WEBSITE_KEYS = {\n  PDC: \"17448046178191022\",\n  PDD: \"17448045555816402\",\n  SCC: \"17448048807377486\",\n};\n\n// Error types for better error tracking\nconst ErrorTypes = {\n  INITIALIZATION: \"FFEP_INITIALIZATION_ERROR\",\n  API: \"FFEP_API_ERROR\",\n  CACHE: \"FFEP_CACHE_ERROR\",\n  FORM_SUBMISSION: \"FFEP_FORM_SUBMISSION_ERROR\",\n};\n// Enhanced debounce function with variable wait time\nfunction debounce(func, getWaitTime) {\n  let timeout;\n  return function executedFunction(...args) {\n    return new Promise((resolve) => {\n      const later = async () => {\n        clearTimeout(timeout);\n        resolve(await func.apply(this, args));\n      };\n      clearTimeout(timeout);\n      const wait = typeof getWaitTime === \"function\" ? getWaitTime(...args) : getWaitTime;\n      timeout = setTimeout(later, wait);\n    });\n  };\n}\n\nclass FFEP {\n  constructor() {\n    this.form = null;\n    this.addressInput = null;\n    this.autocompleteContainer = null;\n    this.suggestions = [];\n    this.selectedIndex = -1;\n    this.isAutocompleteVisible = false;\n    this.apiCallCount = 0;\n    this.cacheHits = 0;\n    this.cacheMisses = 0;\n    this.cacheErrors = 0;\n    this.lastQuery = \"\";\n    this.errorElement = null;\n    this.submitButton = null;\n    this.CACHE_PREFIX = \"ffep_cache_\";\n    this.MAX_CACHE_ITEMS = 50;\n\n    // Initialize cache cleanup\n    this.cleanupCache();\n    // console.log(\"FFEP Cache Initialized\");\n\n    const hostname = window.location.hostname;\n    if (hostname.includes(\"scorecredit.webflow.io\") || hostname.includes(\"scorecredit.com\")) {\n      this.smartyKey = SMARTY_WEBSITE_KEYS.SCC;\n    } else if (hostname.includes(\".dev\")) {\n      this.smartyKey = SMARTY_WEBSITE_KEYS.PDD;\n    } else {\n      this.smartyKey = SMARTY_WEBSITE_KEYS.PDC;\n    }\n\n    this.debouncedFetchSuggestions = debounce(this.fetchSuggestions.bind(this), (query) => (query.length <= 4 ? 50 : 200));\n  }\n\n  // Add cache management methods\n  cleanupCache() {\n    try {\n      const beforeCount = this.getCacheKeys().length;\n      const cacheKeys = this.getCacheKeys();\n      if (cacheKeys.length > this.MAX_CACHE_ITEMS) {\n        // Remove oldest items to maintain size limit\n        const keysToRemove = cacheKeys.slice(0, cacheKeys.length - this.MAX_CACHE_ITEMS);\n        keysToRemove.forEach((key) => sessionStorage.removeItem(key));\n        // console.log(`Cache Cleanup: Removed ${keysToRemove.length} items. Before: ${beforeCount}, After: ${this.getCacheKeys().length}`);\n      }\n    } catch (error) {\n      error.name = ErrorTypes.CACHE;\n      error.metadata = {\n        cacheSize: this.getCacheKeys().length,\n        cacheErrors: this.cacheErrors,\n      };\n      Bugsnag.notify(error);\n      console.warn(\"Cache cleanup failed:\", error);\n      this.cacheErrors++;\n    }\n  }\n\n  getCacheKeys() {\n    return Object.keys(sessionStorage)\n      .filter((key) => key.startsWith(this.CACHE_PREFIX))\n      .sort((a, b) => {\n        const timeA = JSON.parse(sessionStorage.getItem(a))?.timestamp || 0;\n        const timeB = JSON.parse(sessionStorage.getItem(b))?.timestamp || 0;\n        return timeA - timeB;\n      });\n  }\n\n  getCachedItem(key) {\n    try {\n      const item = sessionStorage.getItem(this.CACHE_PREFIX + key);\n      if (!item) {\n        // console.log(`Cache Miss: ${key}`);\n        this.cacheMisses++;\n        return null;\n      }\n\n      const parsed = JSON.parse(item);\n      // Return null if cache is older than 30 minutes\n      if (Date.now() - parsed.timestamp > 30 * 60 * 1000) {\n        // console.log(`Cache Expired: ${key}`);\n        sessionStorage.removeItem(this.CACHE_PREFIX + key);\n        this.cacheMisses++;\n        return null;\n      }\n      // console.log(`Cache Hit: ${key}`);\n      this.cacheHits++;\n      return parsed.data;\n    } catch (error) {\n      console.warn(\"Cache retrieval failed:\", error);\n      this.cacheErrors++;\n      return null;\n    }\n  }\n\n  setCachedItem(key, data) {\n    try {\n      const cacheItem = {\n        timestamp: Date.now(),\n        data: data,\n      };\n      sessionStorage.setItem(this.CACHE_PREFIX + key, JSON.stringify(cacheItem));\n      // console.log(`Cache Set: ${key}, Items in cache: ${this.getCacheKeys().length}`);\n      this.cleanupCache();\n    } catch (error) {\n      // console.warn(\"Cache storage failed:\", error);\n      this.cacheErrors++;\n      // If storage fails (e.g., quota exceeded), clear some old items and try again\n      try {\n        this.cleanupCache();\n        sessionStorage.setItem(this.CACHE_PREFIX + key, JSON.stringify(cacheItem));\n        // console.log(`Cache Set Retry Successful: ${key}`);\n      } catch (retryError) {\n        // console.warn(\"Cache storage retry failed:\", retryError);\n        this.cacheErrors++;\n      }\n    }\n  }\n\n  init() {\n    // Find the address input directly\n    this.addressInput = document.querySelector('[data-ffep=\"address\"]');\n    if (!this.addressInput) {\n      const error = new Error('Input with data-ffep=\"address\" not found');\n      error.name = ErrorTypes.INITIALIZATION;\n      Bugsnag.notify(error);\n      console.error(error);\n      return;\n    }\n\n    // Find the submit button\n    this.submitButton = document.querySelector(\"#ffep-submit\");\n\n    // Find the error element\n    this.errorElement = document.querySelector(\".field-error\");\n\n    this.setupAutocomplete();\n    this.setupFormHandling();\n  }\n\n  setupAutocomplete() {\n    // Find existing autocomplete container created in Webflow\n    this.autocompleteContainer = document.querySelector(\".ffep-autocomplete\");\n    if (!this.autocompleteContainer) {\n      // console.error(\"Autocomplete container with class 'ffep-autocomplete' not found\");\n      return;\n    }\n\n    // Setup input event listeners\n    this.addressInput.addEventListener(\"input\", this.handleInput.bind(this));\n    this.addressInput.addEventListener(\"keydown\", this.handleKeydown.bind(this));\n    this.addressInput.addEventListener(\"focus\", this.handleFocus.bind(this));\n    document.addEventListener(\"click\", this.handleClickOutside.bind(this));\n    this.autocompleteContainer.addEventListener(\"mouseover\", this.handleMouseOver.bind(this));\n  }\n\n  setupFormHandling() {\n    const handleSubmit = async () => {\n      try {\n        // Get the address and encode it properly for both parameters\n        const addressValue = this.addressInput.value;\n        const encodedAddress = encodeURIComponent(addressValue).replace(/%20/g, \"+\");\n\n        // Get the current URL to determine the TLD\n        const currentUrl = new URL(window.location.href);\n        const hostname = currentUrl.hostname;\n        let targetTLD;\n        if (hostname.includes(\"scorecredit.webflow.io\")) {\n          targetTLD = \"dev\";\n        } else if (hostname.includes(\"scorecredit.com\")) {\n          targetTLD = \"com\";\n        } else if (hostname.includes(\".dev\")) {\n          targetTLD = \"dev\";\n        } else {\n          targetTLD = \"com\";\n        }\n\n        // Construct URL with both parameters\n        const targetUrl = `https://home.point.${targetTLD}/?Enter+your+home+address=${encodedAddress}&address=${encodedAddress}`;\n\n        // Immediately redirect without showing form submission\n        window.location.replace(targetUrl);\n      } catch (error) {\n        error.name = ErrorTypes.FORM_SUBMISSION;\n        error.metadata = {\n          addressValue: this.addressInput.value,\n          currentUrl: window.location.href,\n        };\n        Bugsnag.notify(error);\n        console.error(\"Error during redirect:\", error);\n        if (this.errorElement) {\n          this.errorElement.style.display = \"block\";\n        }\n      }\n    };\n\n    // Handle submit button click\n    if (this.submitButton) {\n      this.submitButton.addEventListener(\"click\", (e) => {\n        e.preventDefault(); // Prevent the default anchor tag behavior\n        if (!this.isAutocompleteVisible) {\n          handleSubmit();\n        }\n      });\n    }\n\n    // Handle enter key on input\n    this.addressInput.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Enter\" && !this.isAutocompleteVisible) {\n        handleSubmit();\n      }\n    });\n  }\n\n  async handleInput(e) {\n    const query = e.target.value;\n    // console.log(\"Input value:\", query);\n    if (query.length < 3) {\n      this.hideSuggestions();\n      return;\n    }\n\n    try {\n      // Use the debounced version for API calls\n      const suggestions = await this.debouncedFetchSuggestions(query);\n      // console.log(\"Received suggestions:\", suggestions);\n      if (suggestions) {\n        this.suggestions = suggestions;\n        this.showSuggestions();\n      }\n    } catch (error) {\n      // console.error(\"Error fetching suggestions:\", error);\n    }\n  }\n\n  async fetchSuggestions(query) {\n    if (!query || query.length < 3) return null;\n\n    try {\n      // Check cache first\n      const cacheKey = query.toLowerCase();\n      const cachedResults = this.getCachedItem(cacheKey);\n      if (cachedResults) {\n        // console.log(`Using cached results for: ${query}`);\n        return cachedResults.slice(0, 5); // Limit to 5 results\n      }\n\n      // If this is a longer version of the last query and last query had no results,\n      // we can skip the API call\n      if (this.lastQuery && query.toLowerCase().startsWith(this.lastQuery.toLowerCase()) && this.suggestions.length === 0) {\n        // console.log(`Skipping API call for: ${query} (extension of no-result query: ${this.lastQuery})`);\n        return [];\n      }\n\n      const url = `https://us-autocomplete-pro.api.smartystreets.com/lookup?${new URLSearchParams({\n        search: query,\n        key: this.smartyKey,\n        source: \"all\",\n      })}`;\n\n      this.apiCallCount++;\n      // console.log(`API Call #${this.apiCallCount} for: ${query}`);\n      // console.log(`Cache Stats - Hits: ${this.cacheHits}, Misses: ${this.cacheMisses}, Errors: ${this.cacheErrors}`);\n\n      this.lastQuery = query;\n\n      const response = await fetch(url);\n      if (!response.ok) {\n        const error = new Error(`Failed to fetch suggestions: ${response.status} ${response.statusText}`);\n        error.name = ErrorTypes.API;\n        error.metadata = {\n          status: response.status,\n          url: url,\n          apiCallCount: this.apiCallCount,\n        };\n        Bugsnag.notify(error);\n        throw error;\n      }\n\n      const data = await response.json();\n      const suggestions = (data.suggestions || []).slice(0, 5); // Limit to 5 results\n\n      // Cache the results\n      this.setCachedItem(cacheKey, suggestions);\n\n      // Hide error element if it was previously shown\n      if (this.errorElement) {\n        this.errorElement.style.display = \"none\";\n      }\n\n      return suggestions;\n    } catch (error) {\n      // Ensure error is properly tagged if not already\n      if (!error.name) {\n        error.name = ErrorTypes.API;\n      }\n      Bugsnag.notify(error);\n      console.error(\"Error fetching suggestions:\", error);\n      if (this.errorElement) {\n        this.errorElement.style.display = \"block\";\n      }\n      return [];\n    }\n  }\n\n  showSuggestions() {\n    // console.log(\"Showing suggestions:\", this.suggestions);\n    if (!this.suggestions.length) {\n      // console.log(\"No suggestions to show, hiding container\");\n      this.hideSuggestions();\n      return;\n    }\n\n    if (!this.autocompleteContainer) {\n      // console.error(\"Autocomplete container is null!\");\n      return;\n    }\n\n    const html = this.suggestions\n      .map(\n        (suggestion, index) => `\n        <div class=\"ffep-suggestion\" data-index=\"${index}\" role=\"option\" aria-selected=\"false\">\n          ${suggestion.street_line}, ${suggestion.city}, ${suggestion.state} ${suggestion.zipcode}\n        </div>\n      `\n      )\n      .join(\"\");\n\n    // console.log(\"Generated HTML:\", html);\n    this.autocompleteContainer.innerHTML = html;\n    // console.log(\"Setting display to block\");\n    this.autocompleteContainer.style.display = \"block\";\n    this.isAutocompleteVisible = true;\n\n    // Add click handlers to suggestions\n    this.autocompleteContainer.querySelectorAll(\".ffep-suggestion\").forEach((el) => {\n      el.addEventListener(\"click\", () => {\n        const index = parseInt(el.dataset.index);\n        this.selectSuggestion(index);\n      });\n    });\n  }\n\n  hideSuggestions() {\n    this.autocompleteContainer.style.display = \"none\";\n    this.isAutocompleteVisible = false;\n    this.selectedIndex = -1;\n  }\n\n  handleKeydown(e) {\n    if (!this.isAutocompleteVisible) return;\n\n    const suggestions = this.autocompleteContainer.querySelectorAll(\".ffep-suggestion\");\n    if (!suggestions.length) return;\n\n    switch (e.key) {\n      case \"ArrowUp\":\n        e.preventDefault(); // Prevent page scrolling\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = suggestions.length - 1;\n        } else {\n          this.navigateSuggestions(-1);\n        }\n        this.handleArrowSelection();\n        break;\n      case \"ArrowDown\":\n        e.preventDefault(); // Prevent page scrolling\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = 0;\n        } else {\n          this.navigateSuggestions(1);\n        }\n        this.handleArrowSelection();\n        break;\n      case \"Enter\":\n        if (this.selectedIndex !== -1) {\n          e.preventDefault(); // Prevent form submission\n          const selectedElement = suggestions[this.selectedIndex];\n          if (selectedElement) {\n            const index = parseInt(selectedElement.dataset.index);\n            if (!isNaN(index) && this.suggestions[index]) {\n              const selectedSuggestion = this.suggestions[index];\n              const addressValue = `${selectedSuggestion.street_line}, ${selectedSuggestion.city}, ${selectedSuggestion.state} ${selectedSuggestion.zipcode}`;\n              this.addressInput.value = addressValue;\n              this.hideSuggestions();\n\n              // Direct URL navigation\n              const encodedAddress = encodeURIComponent(addressValue).replace(/%20/g, \"+\");\n              const hostname = window.location.hostname;\n              let targetTLD;\n              if (hostname.includes(\"scorecredit.webflow.io\")) {\n                targetTLD = \"dev\";\n              } else if (hostname.includes(\"scorecredit.com\")) {\n                targetTLD = \"com\";\n              } else if (hostname.includes(\".dev\")) {\n                targetTLD = \"dev\";\n              } else {\n                targetTLD = \"com\";\n              }\n              const targetUrl = `https://home.point.${targetTLD}/?Enter+your+home+address=${encodedAddress}&address=${encodedAddress}`;\n              window.location.replace(targetUrl);\n            }\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  navigateSuggestions(direction) {\n    const suggestions = this.autocompleteContainer.querySelectorAll(\".ffep-suggestion\");\n    if (!suggestions.length) return;\n\n    this.selectedIndex += direction;\n\n    if (this.selectedIndex < 0) {\n      this.selectedIndex = suggestions.length - 1;\n    }\n\n    if (this.selectedIndex >= suggestions.length) {\n      this.selectedIndex = 0;\n    }\n  }\n\n  handleMouseOver(event) {\n    if (event.target.classList.contains(\"ffep-suggestion\")) {\n      const suggestions = this.autocompleteContainer.querySelectorAll(\".ffep-suggestion\");\n      suggestions.forEach((el) => {\n        el.classList.remove(\"hover\");\n      });\n      event.target.classList.add(\"hover\");\n    }\n  }\n\n  handleArrowSelection() {\n    const suggestions = this.autocompleteContainer.querySelectorAll(\".ffep-suggestion\");\n    suggestions.forEach((el, index) => {\n      el.classList.remove(\"hover\");\n      el.setAttribute(\"aria-selected\", \"false\");\n      if (index === this.selectedIndex) {\n        el.classList.add(\"hover\");\n        el.setAttribute(\"aria-selected\", \"true\");\n      }\n    });\n  }\n\n  selectSuggestion(index) {\n    const suggestions = this.autocompleteContainer.querySelectorAll(\".ffep-suggestion\");\n    if (index !== undefined && suggestions[index]) {\n      const selectedElement = suggestions[index];\n      const selectedIndex = parseInt(selectedElement.dataset.index);\n      if (!isNaN(selectedIndex) && this.suggestions[selectedIndex]) {\n        const selectedSuggestion = this.suggestions[selectedIndex];\n        const addressValue = `${selectedSuggestion.street_line}, ${selectedSuggestion.city}, ${selectedSuggestion.state} ${selectedSuggestion.zipcode}`;\n        this.addressInput.value = addressValue;\n        this.hideSuggestions();\n\n        // Direct URL navigation\n        const encodedAddress = encodeURIComponent(addressValue).replace(/%20/g, \"+\");\n        const hostname = window.location.hostname;\n        let targetTLD;\n        if (hostname.includes(\"scorecredit.webflow.io\")) {\n          targetTLD = \"dev\";\n        } else if (hostname.includes(\"scorecredit.com\")) {\n          targetTLD = \"com\";\n        } else if (hostname.includes(\".dev\")) {\n          targetTLD = \"dev\";\n        } else {\n          targetTLD = \"com\";\n        }\n        const targetUrl = `https://home.point.${targetTLD}/?Enter+your+home+address=${encodedAddress}&address=${encodedAddress}`;\n        window.location.replace(targetUrl);\n      }\n    }\n  }\n\n  handleClickOutside(e) {\n    if (!this.autocompleteContainer.contains(e.target) && e.target !== this.addressInput) {\n      this.hideSuggestions();\n    }\n  }\n\n  async handleFocus(e) {\n    const query = e.target.value;\n    if (query.length < 3) {\n      return;\n    }\n\n    // Check if we already have suggestions visible\n    if (this.isAutocompleteVisible) {\n      return;\n    }\n\n    try {\n      // Check cache for current input value\n      const cacheKey = query.toLowerCase();\n      const cachedResults = this.getCachedItem(cacheKey);\n\n      if (cachedResults && cachedResults.length > 0) {\n        console.log(`Reshowing cached results for: ${query} on focus`);\n        this.suggestions = cachedResults;\n        this.showSuggestions();\n      }\n    } catch (error) {\n      console.error(\"Error fetching cached suggestions on focus:\", error);\n    }\n  }\n}\n\n// Initialize FFEP when the DOM is ready\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  window.FFEP = FFEP; // Make FFEP available globally\n  const ffep = new FFEP();\n  ffep.init();\n});\n"
  ],
  "mappings": "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",
  "debugId": "69A77D1CD50C437B64756E2164756E21",
  "names": []
}